{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCOCQ,EAZJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACvB,OACC,sBAAKC,UAAU,6CAAf,UACG,qBAAKC,IAAK,eAAeC,IAAG,+BAA0BH,EAA1B,cAC/B,gCACC,6BAAKF,IACL,4BAAIC,WCcQK,EAlBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEhB,OACI,8BACEA,EAAOC,KAAI,SAACC,EAAMC,GAEpB,OAAQ,cAAC,EAAD,CAELR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAASM,EAAOG,GAAGT,OAHTS,SCQHC,EAhBC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAE7B,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAU,gCACVW,KAAK,SACLC,YAAa,gBACbC,SAAUH,OCCEI,G,MAVA,SAACC,GAEf,OACE,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAS,kBAAmBC,OAAQ,UAArE,SACCJ,EAAMK,aCuDKC,E,kDAtDd,aACC,IAAD,8BACC,gBAkBDC,eAAe,SAACC,GAEf,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAnBzC,EAAKC,MACL,CACCvB,OAAO,GACPK,YAAY,IALd,E,gEASoB,IAAD,OAClBmB,MAAM,8CACLtC,MAAK,SAAAuC,GACL,OAAOA,EAASC,UAEhBxC,MAAK,SAAAyC,GACL,EAAKP,SAAS,CAACpB,OAAQ2B,S,+BAUxB,IAAD,OACOC,EAAiBC,KAAKN,MAAMvB,OAAO8B,QACxC,SAAAC,GACC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS,EAAKV,MAAMlB,YAAY2B,kBAIlE,OAA+B,IAA5BH,KAAKN,MAAMvB,OAAOkC,OAEb,2CAKP,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAU4B,a,GA7CPO,aCClBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.b889b951.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card=({name,email,id})=>{\r\n\treturn(\r\n\t\t<div className='bg-dark-gray dib br3 pa3 ma2 grow shadow-5'>\r\n\t    <img alt= 'Ankit Mishra' src={`https://robohash.org/${id}?200*200`}/>\r\n\t\t<div> \r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList=({robots})=>{\r\n\r\n\treturn(\r\n\t\t   <div>\r\n\t\t    {robots.map((user, i) =>\r\n\t\t\t\t{\r\n\t\t\t\t\treturn( <Card\r\n\t\t\t\t\t\t\t    key = {i} \r\n\t\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\t\tname ={robots[i].name} \r\n\t\t\t\t\t\t\t\temail = {robots[i].email} />\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t   </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input \r\n\t\t\tclassName=\"pa3 ba b--green bg-light-blue\"\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder ='search robots'\r\n\t\t\tonChange={searchChange} />\r\n\t\t</div>\r\n\r\n\r\n\t\t);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => \r\n{\r\n\treturn (\r\n\t\t\t<div style={{overflow: 'scroll', border : '5px solid black', height: '5000px'}}>\r\n\t\t\t{props.children}\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component}from 'react';\r\nimport CardList from './CardList';\r\nimport Searchbox from './SearchBox';\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n \r\nclass App extends Component{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.state =\r\n\t\t{\r\n\t\t\trobots:[], //currently static so not really needed but if information is coming from some source then needed.\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=>{\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(users =>{\r\n\t\t\tthis.setState({robots: users});\r\n\t\t} )\r\n\t}\r\n\r\n\tonSearchChange=(event)=>\r\n\t{\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst filteredRobots = this.state.robots.filter(\r\n\t\t\trobot =>{\r\n\t\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t\tif(this.state.robots.length ===0)\r\n\t\t{\r\n\t\t\treturn <h1> Loading </h1>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t  return(\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className='f1'> RoboFriends </h1>\r\n\t\t\t\t<Searchbox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots = {filteredRobots} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <App />  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}